basePath: /api/v1
definitions:
  models.Borrower:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.BorrowerRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    required:
    - first_name
    - last_name
    - phone_number
    type: object
  models.ErrorResponse:
    properties:
      error:
        description: Error message for debugging
        example: Nil pointer reference
        type: string
      message:
        description: Error message to be shown for user
        example: Something went wrong while processing your request.
        type: string
      result:
        description: Custom data for needed for specific case
    type: object
  models.Loan:
    properties:
      amount:
        type: number
      borrower_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      interest_amount:
        type: number
      interest_percentage:
        type: number
      repayment_cadence_days:
        type: integer
      repayment_repetition:
        type: integer
      status:
        $ref: '#/definitions/models.LoanStatus'
      updated_at:
        type: string
    type: object
  models.LoanRequest:
    properties:
      amount:
        type: number
      borrower_id:
        type: string
      interest_percentage:
        type: number
      repayment_cadence_days:
        type: integer
      repayment_repetition:
        type: integer
    required:
    - amount
    - borrower_id
    - interest_percentage
    - repayment_cadence_days
    - repayment_repetition
    type: object
  models.LoanStatus:
    enum:
    - active
    - paid
    type: string
    x-enum-varnames:
    - LoanStatusActive
    - LoanStatusPaid
  models.PaymentLinkRequest:
    properties:
      borrower_id:
        type: string
      payment_method:
        type: string
    required:
    - borrower_id
    - payment_method
    type: object
  models.PaymentWebhookRequest:
    properties:
      external_id:
        type: string
      payment_status:
        type: string
    required:
    - external_id
    - payment_status
    type: object
host: localhost:8080
info:
  contact: {}
  description: A Golang backend application for managing loans, borrowers, and payments.
  title: Amartha Loan Management API
  version: "1.0"
paths:
  /borrowers:
    post:
      consumes:
      - application/json
      description: Create a new borrower with the provided information
      parameters:
      - description: Borrower object
        in: body
        name: borrower
        required: true
        schema:
          $ref: '#/definitions/models.BorrowerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Borrower'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new borrower
      tags:
      - borrowers
  /borrowers/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific borrower by their ID
      parameters:
      - description: Borrower ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.Borrower'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get borrower by ID
      tags:
      - borrowers
  /loans:
    post:
      consumes:
      - application/json
      description: Create a new loan with automatic schedule generation
      parameters:
      - description: Loan object
        in: body
        name: loan
        required: true
        schema:
          $ref: '#/definitions/models.LoanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Loan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new loan
      tags:
      - loans
  /loans/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific loan by its ID
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.Loan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get loan by ID
      tags:
      - loans
  /payments/link:
    post:
      consumes:
      - application/json
      description: Generate a payment link for a specific loan
      parameters:
      - description: Payment link request
        in: body
        name: paymentLinkRequest
        required: true
        schema:
          $ref: '#/definitions/models.PaymentLinkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Generate payment link
      tags:
      - payments
  /payments/webhook:
    post:
      consumes:
      - application/json
      description: Process payment webhook from payment gateway
      parameters:
      - description: Payment webhook data
        in: body
        name: paymentData
        required: true
        schema:
          $ref: '#/definitions/models.PaymentWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Handle payment webhook
      tags:
      - payments
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
